name: OpenWrt Package CI

on:
  push:
  workflow_dispatch:

jobs:
  build:

    strategy: 
      matrix:
        target: [x86-64, ramips-mt7620, ramips-mt7621, rockchip-armv8, sunxi-cortexa53, sunxi-cortexa7, sunxi-cortexa8, mediatek-mt7622, ipq807x-generic, bcm53xx-generic]

    name: Build ${{ matrix.target }}

    runs-on: ubuntu-latest

    steps:

      - name: Setup Environment
        run: |
          sudo apt-fast update
          sudo apt-fast -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync

      - name: Set Target Varibles
        run: |
          echo "TARGET=$(echo ${{ matrix.target }})" >> $GITHUB_ENV
          echo "TARGET_PATH=$(echo ${{ matrix.target }} | sed 's/-/\//g')" >> $GITHUB_ENV
          echo "TARGET_NAME=$(echo ${{ matrix.target }} | sed 's/-/_/g')" >> $GITHUB_ENV
      
      - uses: actions/cache@v2
        id: cache
        with:
          path: openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64
          key: ${{ runner.os }}-${{ matrix.target }}-openwrt
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-openwrt

      - name: Setup OpenWRT SDK
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          wget https://archive.openwrt.org/releases/21.02.1/targets/${{env.TARGET_PATH}}/openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          tar -xvJf openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          cd openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Checkout Build Files
        uses: actions/checkout@v2
        with:
          path: openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64/package/bitsrunlogin-go
          ref: openwrt-build

      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          path: openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64/package/bitsrunlogin-go/src
          ref: main

      - name: Checkout LuCI Code
        uses: actions/checkout@v2
        with:
          path: openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64/package/luci-app-bitsrunlogin-go
          ref: luci

      - name: Compile Package
        working-directory: ./openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64
        run: |
          make defconfig
          make package/luci-app-bitsrunlogin-go/compile -j2 V=s

      - name: Upload All Packages
        uses: actions/upload-artifact@v3.1.0
        with: 
          name: ${{ matrix.target }}-packages
          path: openwrt-sdk-21.02.1-${{ matrix.target }}_gcc-8.4.0_musl.Linux-x86_64/bin/packages/${{ env.TARGET_NAME }}/base/*

#       - name: Release Package
#         uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: "${{ steps.current-time.outputs.formattedTime }}"
#           prerelease: true
#           files: |
#             openwrt-sdk-21.02.0-rc1-ramips-mt7620_gcc-8.4.0_musl.Linux-x86_64/bin/packages/mipsel_24kc/base/BitSrunLoginGo*