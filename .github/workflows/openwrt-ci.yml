name: OpenWrt Package CI

on:
  push:
  workflow_dispatch:

env: 
  SDK_VERSION: 21.02.1
  SDK_GCC_VERSION: 8.4.0

jobs:
  build:

    strategy: 
      matrix:
        target: 
          - x86-64
          - ramips-mt7620
          - ramips-mt7621
          - rockchip-armv8
          - sunxi-cortexa53
          - sunxi-cortexa7
          - sunxi-cortexa8
          - mediatek-mt7622
          - ipq806x-generic
          - bcm53xx-generic

    name: Build ${{ matrix.target }}

    runs-on: ubuntu-latest

    steps:

      - name: Setup Environment
        run: |
          sudo apt-fast update
          sudo apt-fast -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync

      - name: Set Target Varibles
        run: |
          export TARGET=${{ matrix.target }}
          if [[ $TARGET =~ 'cortexa7' || $TARGET =~ 'cortexa8' || $TARGET =~ 'ipq806x' || $TARGET =~ 'bcm53xx' ]]; then
            echo "SDK_NAME=$(echo openwrt-sdk-${{ env.SDK_VERSION }}-${{ matrix.target }}_gcc-${{ env.SDK_GCC_VERSION }}_musl_eabi.Linux-x86_64)" >> $GITHUB_ENV
          else 
            echo "SDK_NAME=$(echo openwrt-sdk-${{ env.SDK_VERSION }}-${{ matrix.target }}_gcc-${{ env.SDK_GCC_VERSION }}_musl.Linux-x86_64)" >> $GITHUB_ENV
          fi
          echo "TARGET_PATH=$(echo ${{ matrix.target }} | sed 's/-/\//g')" >> $GITHUB_ENV
          echo "TARGET_NAME=$(echo ${{ matrix.target }} | sed 's/-/_/g')" >> $GITHUB_ENV
      
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.SDK_NAME }}
          key: ${{ runner.os }}-${{ matrix.target }}-openwrt
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-openwrt

      - name: Setup OpenWRT SDK
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          wget https://archive.openwrt.org/releases/${{ env.SDK_VERSION }}/targets/${{ env.TARGET_PATH }}/${{ env.SDK_NAME }}.tar.xz
          tar -xvJf ${{ env.SDK_NAME }}.tar.xz
          cd ${{ env.SDK_NAME }}
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Checkout Build Files
        uses: actions/checkout@v2
        with:
          path: ${{ env.SDK_NAME }}/package/bitsrunlogin-go
          ref: openwrt-build

      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          path: ${{ env.SDK_NAME }}/package/bitsrunlogin-go/src
          ref: main

      - name: Checkout LuCI Code
        uses: actions/checkout@v2
        with:
          path: ${{ env.SDK_NAME }}/package/luci-app-bitsrunlogin-go
          ref: luci

      - name: Compile Package
        working-directory: ${{ env.SDK_NAME }}
        run: |
          make defconfig
          make package/luci-app-bitsrunlogin-go/compile -j2 V=s

      - name: Upload All Packages
        uses: actions/upload-artifact@v3.1.0
        with: 
          name: ${{ matrix.target }}-packages
          path: ${{ env.SDK_NAME }}/bin/packages/*/base/*bitsrunlogin*.ipk

      - name: Upload to Release
        if: github.event.release.tag_name != ''
        uses: svenstaro/upload-release-action@v2
        with: 
          repo_token: ${{ env.GITHUB_TOKEN }}
          file: ${{ env.SDK_NAME }}/bin/packages/*/base/*bitsrunlogin*.ipk
          overwrite: true
          tag: ${{ github.ref }}
          file_glob: true
          prerelease: true
          